"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.io = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.19.4
 * source: common_models.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const dependency_1 = __importStar(require("./google/protobuf/timestamp"));
const pb_1 = __importStar(require("google-protobuf"));
var io;
(function (io) {
    var iohk;
    (function (iohk) {
        var atala;
        (function (atala) {
            var prism;
            (function (prism) {
                var protos;
                (function (protos) {
                    let SortByDirection;
                    (function (SortByDirection) {
                        SortByDirection[SortByDirection["SORT_BY_DIRECTION_UNKNOWN"] = 0] = "SORT_BY_DIRECTION_UNKNOWN";
                        SortByDirection[SortByDirection["SORT_BY_DIRECTION_ASCENDING"] = 1] = "SORT_BY_DIRECTION_ASCENDING";
                        SortByDirection[SortByDirection["SORT_BY_DIRECTION_DESCENDING"] = 2] = "SORT_BY_DIRECTION_DESCENDING";
                    })(SortByDirection = protos.SortByDirection || (protos.SortByDirection = {}));
                    let Ledger;
                    (function (Ledger) {
                        Ledger[Ledger["UNKNOWN_LEDGER"] = 0] = "UNKNOWN_LEDGER";
                        Ledger[Ledger["IN_MEMORY"] = 1] = "IN_MEMORY";
                        Ledger[Ledger["CARDANO_TESTNET"] = 4] = "CARDANO_TESTNET";
                        Ledger[Ledger["CARDANO_MAINNET"] = 5] = "CARDANO_MAINNET";
                    })(Ledger = protos.Ledger || (protos.Ledger = {}));
                    let OperationStatus;
                    (function (OperationStatus) {
                        OperationStatus[OperationStatus["UNKNOWN_OPERATION"] = 0] = "UNKNOWN_OPERATION";
                        OperationStatus[OperationStatus["PENDING_SUBMISSION"] = 1] = "PENDING_SUBMISSION";
                        OperationStatus[OperationStatus["AWAIT_CONFIRMATION"] = 2] = "AWAIT_CONFIRMATION";
                        OperationStatus[OperationStatus["CONFIRMED_AND_APPLIED"] = 3] = "CONFIRMED_AND_APPLIED";
                        OperationStatus[OperationStatus["CONFIRMED_AND_REJECTED"] = 4] = "CONFIRMED_AND_REJECTED";
                    })(OperationStatus = protos.OperationStatus || (protos.OperationStatus = {}));
                    class HealthCheckRequest extends pb_1.Message {
                        #one_of_decls = [];
                        constructor(data) {
                            super();
                            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
                            if (!Array.isArray(data) && typeof data == "object") { }
                        }
                        static fromObject(data) {
                            const message = new HealthCheckRequest({});
                            return message;
                        }
                        toObject() {
                            const data = {};
                            return data;
                        }
                        serialize(w) {
                            const writer = w || new pb_1.BinaryWriter();
                            if (!w)
                                return writer.getResultBuffer();
                        }
                        static deserialize(bytes) {
                            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new HealthCheckRequest();
                            while (reader.nextField()) {
                                if (reader.isEndGroup())
                                    break;
                                switch (reader.getFieldNumber()) {
                                    default: reader.skipField();
                                }
                            }
                            return message;
                        }
                        serializeBinary() {
                            return this.serialize();
                        }
                        static deserializeBinary(bytes) {
                            return HealthCheckRequest.deserialize(bytes);
                        }
                    }
                    protos.HealthCheckRequest = HealthCheckRequest;
                    class HealthCheckResponse extends pb_1.Message {
                        #one_of_decls = [];
                        constructor(data) {
                            super();
                            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
                            if (!Array.isArray(data) && typeof data == "object") { }
                        }
                        static fromObject(data) {
                            const message = new HealthCheckResponse({});
                            return message;
                        }
                        toObject() {
                            const data = {};
                            return data;
                        }
                        serialize(w) {
                            const writer = w || new pb_1.BinaryWriter();
                            if (!w)
                                return writer.getResultBuffer();
                        }
                        static deserialize(bytes) {
                            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new HealthCheckResponse();
                            while (reader.nextField()) {
                                if (reader.isEndGroup())
                                    break;
                                switch (reader.getFieldNumber()) {
                                    default: reader.skipField();
                                }
                            }
                            return message;
                        }
                        serializeBinary() {
                            return this.serialize();
                        }
                        static deserializeBinary(bytes) {
                            return HealthCheckResponse.deserialize(bytes);
                        }
                    }
                    protos.HealthCheckResponse = HealthCheckResponse;
                    class Date extends pb_1.Message {
                        #one_of_decls = [];
                        constructor(data) {
                            super();
                            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
                            if (!Array.isArray(data) && typeof data == "object") {
                                if ("year" in data && data.year != undefined) {
                                    this.year = data.year;
                                }
                                if ("month" in data && data.month != undefined) {
                                    this.month = data.month;
                                }
                                if ("day" in data && data.day != undefined) {
                                    this.day = data.day;
                                }
                            }
                        }
                        get year() {
                            return pb_1.Message.getFieldWithDefault(this, 1, 0);
                        }
                        set year(value) {
                            pb_1.Message.setField(this, 1, value);
                        }
                        get month() {
                            return pb_1.Message.getFieldWithDefault(this, 2, 0);
                        }
                        set month(value) {
                            pb_1.Message.setField(this, 2, value);
                        }
                        get day() {
                            return pb_1.Message.getFieldWithDefault(this, 3, 0);
                        }
                        set day(value) {
                            pb_1.Message.setField(this, 3, value);
                        }
                        static fromObject(data) {
                            const message = new Date({});
                            if (data.year != null) {
                                message.year = data.year;
                            }
                            if (data.month != null) {
                                message.month = data.month;
                            }
                            if (data.day != null) {
                                message.day = data.day;
                            }
                            return message;
                        }
                        toObject() {
                            const data = {};
                            if (this.year != null) {
                                data.year = this.year;
                            }
                            if (this.month != null) {
                                data.month = this.month;
                            }
                            if (this.day != null) {
                                data.day = this.day;
                            }
                            return data;
                        }
                        serialize(w) {
                            const writer = w || new pb_1.BinaryWriter();
                            if (this.year != 0)
                                writer.writeInt32(1, this.year);
                            if (this.month != 0)
                                writer.writeInt32(2, this.month);
                            if (this.day != 0)
                                writer.writeInt32(3, this.day);
                            if (!w)
                                return writer.getResultBuffer();
                        }
                        static deserialize(bytes) {
                            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Date();
                            while (reader.nextField()) {
                                if (reader.isEndGroup())
                                    break;
                                switch (reader.getFieldNumber()) {
                                    case 1:
                                        message.year = reader.readInt32();
                                        break;
                                    case 2:
                                        message.month = reader.readInt32();
                                        break;
                                    case 3:
                                        message.day = reader.readInt32();
                                        break;
                                    default: reader.skipField();
                                }
                            }
                            return message;
                        }
                        serializeBinary() {
                            return this.serialize();
                        }
                        static deserializeBinary(bytes) {
                            return Date.deserialize(bytes);
                        }
                    }
                    protos.Date = Date;
                    class TimeInterval extends pb_1.Message {
                        #one_of_decls = [];
                        constructor(data) {
                            super();
                            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
                            if (!Array.isArray(data) && typeof data == "object") {
                                if ("start_timestamp" in data && data.start_timestamp != undefined) {
                                    this.start_timestamp = data.start_timestamp;
                                }
                                if ("end_timestamp" in data && data.end_timestamp != undefined) {
                                    this.end_timestamp = data.end_timestamp;
                                }
                            }
                        }
                        get start_timestamp() {
                            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 1);
                        }
                        set start_timestamp(value) {
                            pb_1.Message.setWrapperField(this, 1, value);
                        }
                        get has_start_timestamp() {
                            return pb_1.Message.getField(this, 1) != null;
                        }
                        get end_timestamp() {
                            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 2);
                        }
                        set end_timestamp(value) {
                            pb_1.Message.setWrapperField(this, 2, value);
                        }
                        get has_end_timestamp() {
                            return pb_1.Message.getField(this, 2) != null;
                        }
                        static fromObject(data) {
                            const message = new TimeInterval({});
                            if (data.start_timestamp != null) {
                                message.start_timestamp = dependency_1.google.protobuf.Timestamp.fromObject(data.start_timestamp);
                            }
                            if (data.end_timestamp != null) {
                                message.end_timestamp = dependency_1.google.protobuf.Timestamp.fromObject(data.end_timestamp);
                            }
                            return message;
                        }
                        toObject() {
                            const data = {};
                            if (this.start_timestamp != null) {
                                data.start_timestamp = this.start_timestamp.toObject();
                            }
                            if (this.end_timestamp != null) {
                                data.end_timestamp = this.end_timestamp.toObject();
                            }
                            return data;
                        }
                        serialize(w) {
                            const writer = w || new pb_1.BinaryWriter();
                            if (this.has_start_timestamp)
                                writer.writeMessage(1, this.start_timestamp, () => this.start_timestamp.serialize(writer));
                            if (this.has_end_timestamp)
                                writer.writeMessage(2, this.end_timestamp, () => this.end_timestamp.serialize(writer));
                            if (!w)
                                return writer.getResultBuffer();
                        }
                        static deserialize(bytes) {
                            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new TimeInterval();
                            while (reader.nextField()) {
                                if (reader.isEndGroup())
                                    break;
                                switch (reader.getFieldNumber()) {
                                    case 1:
                                        reader.readMessage(message.start_timestamp, () => message.start_timestamp = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                                        break;
                                    case 2:
                                        reader.readMessage(message.end_timestamp, () => message.end_timestamp = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                                        break;
                                    default: reader.skipField();
                                }
                            }
                            return message;
                        }
                        serializeBinary() {
                            return this.serialize();
                        }
                        static deserializeBinary(bytes) {
                            return TimeInterval.deserialize(bytes);
                        }
                    }
                    protos.TimeInterval = TimeInterval;
                    class BlockInfo extends pb_1.Message {
                        #one_of_decls = [];
                        constructor(data) {
                            super();
                            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
                            if (!Array.isArray(data) && typeof data == "object") {
                                if ("number" in data && data.number != undefined) {
                                    this.number = data.number;
                                }
                                if ("index" in data && data.index != undefined) {
                                    this.index = data.index;
                                }
                                if ("timestamp" in data && data.timestamp != undefined) {
                                    this.timestamp = data.timestamp;
                                }
                            }
                        }
                        get number() {
                            return pb_1.Message.getFieldWithDefault(this, 1, 0);
                        }
                        set number(value) {
                            pb_1.Message.setField(this, 1, value);
                        }
                        get index() {
                            return pb_1.Message.getFieldWithDefault(this, 3, 0);
                        }
                        set index(value) {
                            pb_1.Message.setField(this, 3, value);
                        }
                        get timestamp() {
                            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 4);
                        }
                        set timestamp(value) {
                            pb_1.Message.setWrapperField(this, 4, value);
                        }
                        get has_timestamp() {
                            return pb_1.Message.getField(this, 4) != null;
                        }
                        static fromObject(data) {
                            const message = new BlockInfo({});
                            if (data.number != null) {
                                message.number = data.number;
                            }
                            if (data.index != null) {
                                message.index = data.index;
                            }
                            if (data.timestamp != null) {
                                message.timestamp = dependency_1.google.protobuf.Timestamp.fromObject(data.timestamp);
                            }
                            return message;
                        }
                        toObject() {
                            const data = {};
                            if (this.number != null) {
                                data.number = this.number;
                            }
                            if (this.index != null) {
                                data.index = this.index;
                            }
                            if (this.timestamp != null) {
                                data.timestamp = this.timestamp.toObject();
                            }
                            return data;
                        }
                        serialize(w) {
                            const writer = w || new pb_1.BinaryWriter();
                            if (this.number != 0)
                                writer.writeInt32(1, this.number);
                            if (this.index != 0)
                                writer.writeInt32(3, this.index);
                            if (this.has_timestamp)
                                writer.writeMessage(4, this.timestamp, () => this.timestamp.serialize(writer));
                            if (!w)
                                return writer.getResultBuffer();
                        }
                        static deserialize(bytes) {
                            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new BlockInfo();
                            while (reader.nextField()) {
                                if (reader.isEndGroup())
                                    break;
                                switch (reader.getFieldNumber()) {
                                    case 1:
                                        message.number = reader.readInt32();
                                        break;
                                    case 3:
                                        message.index = reader.readInt32();
                                        break;
                                    case 4:
                                        reader.readMessage(message.timestamp, () => message.timestamp = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                                        break;
                                    default: reader.skipField();
                                }
                            }
                            return message;
                        }
                        serializeBinary() {
                            return this.serialize();
                        }
                        static deserializeBinary(bytes) {
                            return BlockInfo.deserialize(bytes);
                        }
                    }
                    protos.BlockInfo = BlockInfo;
                    class TransactionInfo extends pb_1.Message {
                        #one_of_decls = [];
                        constructor(data) {
                            super();
                            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
                            if (!Array.isArray(data) && typeof data == "object") {
                                if ("transaction_id" in data && data.transaction_id != undefined) {
                                    this.transaction_id = data.transaction_id;
                                }
                                if ("ledger" in data && data.ledger != undefined) {
                                    this.ledger = data.ledger;
                                }
                                if ("block" in data && data.block != undefined) {
                                    this.block = data.block;
                                }
                            }
                        }
                        get transaction_id() {
                            return pb_1.Message.getFieldWithDefault(this, 1, "");
                        }
                        set transaction_id(value) {
                            pb_1.Message.setField(this, 1, value);
                        }
                        get ledger() {
                            return pb_1.Message.getFieldWithDefault(this, 2, Ledger.UNKNOWN_LEDGER);
                        }
                        set ledger(value) {
                            pb_1.Message.setField(this, 2, value);
                        }
                        get block() {
                            return pb_1.Message.getWrapperField(this, BlockInfo, 3);
                        }
                        set block(value) {
                            pb_1.Message.setWrapperField(this, 3, value);
                        }
                        get has_block() {
                            return pb_1.Message.getField(this, 3) != null;
                        }
                        static fromObject(data) {
                            const message = new TransactionInfo({});
                            if (data.transaction_id != null) {
                                message.transaction_id = data.transaction_id;
                            }
                            if (data.ledger != null) {
                                message.ledger = data.ledger;
                            }
                            if (data.block != null) {
                                message.block = BlockInfo.fromObject(data.block);
                            }
                            return message;
                        }
                        toObject() {
                            const data = {};
                            if (this.transaction_id != null) {
                                data.transaction_id = this.transaction_id;
                            }
                            if (this.ledger != null) {
                                data.ledger = this.ledger;
                            }
                            if (this.block != null) {
                                data.block = this.block.toObject();
                            }
                            return data;
                        }
                        serialize(w) {
                            const writer = w || new pb_1.BinaryWriter();
                            if (this.transaction_id.length)
                                writer.writeString(1, this.transaction_id);
                            if (this.ledger != Ledger.UNKNOWN_LEDGER)
                                writer.writeEnum(2, this.ledger);
                            if (this.has_block)
                                writer.writeMessage(3, this.block, () => this.block.serialize(writer));
                            if (!w)
                                return writer.getResultBuffer();
                        }
                        static deserialize(bytes) {
                            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new TransactionInfo();
                            while (reader.nextField()) {
                                if (reader.isEndGroup())
                                    break;
                                switch (reader.getFieldNumber()) {
                                    case 1:
                                        message.transaction_id = reader.readString();
                                        break;
                                    case 2:
                                        message.ledger = reader.readEnum();
                                        break;
                                    case 3:
                                        reader.readMessage(message.block, () => message.block = BlockInfo.deserialize(reader));
                                        break;
                                    default: reader.skipField();
                                }
                            }
                            return message;
                        }
                        serializeBinary() {
                            return this.serialize();
                        }
                        static deserializeBinary(bytes) {
                            return TransactionInfo.deserialize(bytes);
                        }
                    }
                    protos.TransactionInfo = TransactionInfo;
                })(protos = prism.protos || (prism.protos = {}));
            })(prism = atala.prism || (atala.prism = {}));
        })(atala = iohk.atala || (iohk.atala = {}));
    })(iohk = io.iohk || (io.iohk = {}));
})(io = exports.io || (exports.io = {}));
//# sourceMappingURL=data:application/json;base64,